#!/bin/bash

# vpm - void package management utility for
# XBPS, the X Binary Package System

# Copyright (c) 2016 Armin Jenewein <a@m2m.pm>

version="0.5a"

# set to "false" to permanently disable colors
color=true

case "$1" in
  "--color=false")
  color=false
  shift
  ;;
  "--color=true")
  color=true
  shift
  ;;
esac

_tput () {
if [[ $color == true ]]; then
  tput "$@"
fi

}

msg () {
  _tput setaf 110
  echo -n "["
  _tput setaf 214
  echo -n "vpm"
  _tput setaf 110
  echo -n "] "
  echo "$@"
  _tput sgr0
}

version () {
  _tput setaf 107
  cat <<EOF
 __ ___ __ _ __  
 \ V / '_ \ '  \   vpm - a void package management utility
  \_/| .__/_|_|_|  GitHub: https://github.com/netzverweigerer/vpm
     |/         
EOF
  echo
  _tput sgr0
  msg "vpm - Version: $version"
  msg "Copyright (c) 2016 Armin Jenewein <a@m2m.pm>"
  msg "XBPS version: $(xbps-query --version)"
}

# extract versionstring appendix from given package name
extract_versionstring () {
  echo "$1" | rev | cut -d"-" -f 1 | rev
}

# extract versionstring appendix from given package name
extract_packagename () {
  echo "$1" | rev | cut -d"-" -f 2- | rev
}

usage () {
  echo
  version
  echo
  _tput setaf 66
  echo "USAGE: "
  _tput setaf 101
  echo "vpm [OPTIONS] [SUBCMD] [<OPTIONS>] [<args>]"
  echo 
  _tput setaf 66
  echo "OPTIONS: "
  _tput setaf 101
  echo "--color=<true/false>         - Enable/Disable colorized output"
  echo "--help                       - (same as: help)"
  echo
  _tput setaf 66
  echo "SUBCOMMANDS: "
  _tput setaf 109
  echo "sync                         - Synchronize remote repository data"
  echo "update                       - Update the system"
  echo "repolist                     - List configured repositories"
  echo "listrepos                    - (same as: repolist)"
  echo "addrepo                      - Add an additional repository"
  echo "info <package>               - Show information about <package>"
  echo "filelist <package>           - Show file-list of <package>"
  echo "dependencies <package>       - Show dependendies of <package>"
  echo "reverse <package>            - Show reverse dependendies of <package>"
  echo "search <name>                - Search for package by <name>"
  echo "searchfile <file>            - Search for package containing <file>"
  echo "list                         - List installed packages"
  echo "install <package>            - Install <package>"
  echo "forceinstall <package>       - Force installation of <package>"
  echo "remove <package)             - Remove <package>"
  echo "cleanup                      - Clean up cache directory"
  echo "autoremove                   - Remove orphaned packages"
  echo "help                         - Show usage information"
  echo
  _tput setaf 66
  echo "XBPS COMPATIBILITY:"
  _tput setaf 103
  f=(/usr/sbin/xbps-*)
  echo "vpm also understands ALL xbps commands, too:"
  echo -n "Example: "
  selected=${f[$RANDOM % ${#f[@]}]}
  echo "${0##*/} ${selected##*-} <ARGS>"
  echo
}


if [[ "$1" == "" ]]; then
  usage
  exit 0
fi

arg="$1"

if [[ "$arg" =~ --.* ]]; then
b="${arg:2}"
arg="$b"
fi

case "$arg" in
  info)
    shift
    xbps-query -R "$@"
  ;;

  filelist)
    shift
    xbps-query -R -f "$@"
  ;;

  dependencies)
    shift
    xbps-query -R -x "$@"
  ;;

  reverse)
    shift
    xbps-query -R -X "$@"
  ;;

  searchfile)
    shift
    msg "searchfile: This might take a long time, please be patient..."
    sleep 1
    xbps-query -R -o "*/$1"
  ;;

  list)
    shift
    msg "Installed packages: "
    xbps-query -l | while read line; do
    pkgname="$(echo "$line" | cut -d" " -f 2 | xargs -0)"
    version="$(extract_versionstring "$pkgname")"
    pkg="$(extract_packagename "$pkgname")"
    tput setaf 32
    echo -e -n "${pkg} "
    tput setaf 244
    echo " ${version} "
    shift
    done
  ;;

  repolist|listrepos)
    msg "Configured repositories (xbps-query -L): "
    xbps-query -L
    shift
    echo
    msg "Available sub-repositories (xbps-query -Rs void-repo): "
    xbps-query -Rs void-repo
    msg "[xbps-query -Rs void-repo] return code: $?"
    shift
    echo
    msg "Use \"vpm addrepo <repository>\" to add a sub-repository."
    echo
  ;;

  addrepo)
    shift
    while [ "$#" -gt 0 ]; do
    msg "Adding repository: $1"
    xbps-install "$1"
    msg "[xbps-install $arg] return code: $?"
    shift
    done
    ;;
  sync)
    msg "Synchronizing remote repository data: (xbps-install -S):"
    xbps-install -S
    msg "[xbps-install -S] return code: $?"
  ;;

  install)
  shift
  if [ "$#" -lt 1 ]; then
    msg "ERROR: install: argument required"
    usage
    exit 1
  fi
  args=($@)
  count=0
  for arg in "${args[@]}"; do
  let count=count+1
  msg "Installing ($count/${#args[@]}): $arg (xbps-install -S $arg) ..."
  xbps-install -S "$arg"
  msg "[xbps-install -S $arg] return code: $?"
  if type hash >/dev/null 2>&1; then
  msg "zsh detected, Don't forget to refresh the command hash table via \"hash -r\"."
  fi
  done
  ;;

  forceinstall)
  shift
  msg "Force-Installing Package(s): $@ (xbps-install -Sf $@)"
  xbps-install -Sf "$@"
  ;;

  remove)
  shift
  msg "Removing package(s): $@ (xbps-remove $@)"
  xbps-remove "$@"
  ;;

  autoremove)
  shift
  msg "autoremove: Removing orphaned packages (xbps-remove -Q)"
  xbps-remove -O
  msg "done."
  ;;

  update)
  shift
  msg "Running system update (xbps-install -Sduv)"
  xbps-install -Suv
  msg "[xbps-install -Suv] return code: $?"
  ;;

  search)
  shift
  msg "Searching for: $@ (xbps-query -Rs $@)"
  xbps-query -Rs "$@"
  msg "[xbps-query -Rs $@] return code: $?"
  ;;

  cleanup)
  msg "Cleaning up packages (will remove orphaned packages) (xbps-remove -O $@)"
  shift
  xbps-remove -O "$@"
  ;;

  help|-h|--help)
  usage
  ;;

  ''|*)
  a="$1"
  if hash "xbps-${a}" >/dev/null 2>&1; then
    shift
    # xbps-<subcommand> found
    msg "relaying to XBPS: xbps-${a} $@"
    xbps-${a} $@
  else
    msg "Unrecognized vpm subcommand: $1 (and xbps-$1 does not exist) - Try: ${0##*/} help"
    echo
    exit 1
  fi
  ;;

esac

exit 0

