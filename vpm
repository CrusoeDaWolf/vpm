#!/bin/bash
# vim: ft=config ts=2 sw=2 sts=2 et

# vpm - void package management utility for

# XBPS, the X Binary Package System
# Copyright (c) 2016 Armin Jenewein <a@m2m.pm>

getversion () {
  cd "${0%/*}"
  git describe --all --debug --long --tags 2>/dev/null || echo "UNKNOWN"
}

version="$(getversion)"

# set to "false" to permanently disable colors
color=true

case "$1" in
  "--color=false")
  color=false
  shift
  ;;
  "--color=true")
	  color=true
  shift
  ;;
esac

color () {
if [[ $color == true ]]; then
  case "$1" in
    [0-9]*)
      tput setaf "$1"
    ;;
    reset)
      tput sgr0
    ;;
    *)
      tput "$@"
    ;;
  esac
fi

}

msg () {
  color 110
  echo -n "["
  color 214
  echo -n "vpm"
  color 110
  echo -n "] "
  echo "$@"
  color sgr0
}

banner () {
  banner_fg=111
  banner_bg=142
  tput setaf $banner_fg
  echo  ' __ ___ __ _ __  '
  echo -n " \ V / '_ \ '  \ "
  tput setaf $banner_bg
  echo '  vpm - void package management utility'
  tput setaf $banner_fg
  echo -n '  \_/| .__/_|_|_|'
  tput setaf $banner_bg
  echo '  GitHub: https://github.com/netzverweigerer/vpm'
  tput setaf $banner_fg
  echo -n '     |/          '
  tput sgr0
}

version () {
  color 107
  banner
  echo
  color sgr0
  msg "vpm - Version: $version"
  msg "Copyright (c) 2016 Armin Jenewein <a@m2m.pm>"
  msg "XBPS version: $(xbps-query -v --version)"
}

# extract versionstring appendix from given package name
extract_versionstring () {
  echo "$1" | rev | cut -d"-" -f 1 | rev
}

# extract versionstring appendix from given package name
extract_packagename () {
  echo "$1" | rev | cut -d"-" -f 2- | rev
}

usage () {
  echo
  version
  echo
  color 66
  echo
  echo "USAGE: "
  color 101
  echo
  echo "vpm [OPTIONS] [SUBCMD] [<OPTIONS>] [<args>]"
  echo 
  color 66
  echo
  echo "OPTIONS: "
  color 101
  echo
  echo "--color=<true/false>         - Enable/Disable colorized output"
  echo "--help                       - (same as: help)"
  echo
  color 66
  echo
  echo -n "SUBCOMMANDS: "
  echo "(feel free to prefix them with --, vpm doesn't care.)"
  echo
  color 109
  echo "sync                         - Synchronize remote repository data"
  echo "update                       - Update the system"
  echo "repolist                     - List configured repositories"
  echo "listrepos                    - (same as: repolist)"
  echo "addrepo                      - Add an additional repository"
  echo "info <package>               - Show information about <package>"
  echo "filelist <package>           - Show file-list of <package>"
  echo "deps <package>               - Show dependendies of <package>"
  echo "reverse <package>            - Show reverse dependendies of <package>"
  echo "search <name>                - Search for package by <name>"
  echo "searchfile <file>            - Search for package containing <file>"
  echo "list                         - List installed packages"
  echo "install <package>            - Install <package>"
  echo "listalternatives             - List alternative candiates"
  echo "setalternative <package>     - Set alternative for <package>"
  echo "forceinstall <package>       - Force installation of <package>"
  echo "remove <package)             - Remove <package>"
  echo "removerecursive <package>    - Recursively remove package (and its dependencies)"
  echo "cleanup                      - Clean up cache directory"
  echo "autoremove                   - Remove orphaned packages"
  echo "help                         - Show usage information"
  echo
  color 66
  echo
  echo "XBPS COMPATIBILITY:"
  color 103
  f=(/usr/sbin/xbps-*)
  echo
  echo "vpm also understands xbps commands:"
  echo -n "Example: "
  selected=${f[$RANDOM % ${#f[@]}]}
  echo "${0##*/} ${selected##*-} <ARGS>"
  echo
  echo
}


if [[ "$1" == "" ]]; then
  usage
  exit 0
fi

arg="$1"

if [[ "$arg" =~ --.* ]]; then
b="${arg:2}"
arg="$b"
fi

case "$arg" in
  info)
    shift
    msg "(xbps-query -v -R $@):"
    xbps-query -v -R "$@"
    ret=$?; msg "Execution finished (xbps-query -v -R $@), return code was: $ret"
    exit $ret
  ;;

  filelist)
    shift
    xbps-query -v -R -f "$@"
    ret=$?; msg "Execution finished (xbps-query -v -R -f \"*/$1\"), return code was: $ret"
    exit $ret
  ;;

  deps|dependencies)
    shift
    xbps-query -v -R -x "$@"
    ret=$?; msg "Execution finished (xbps-query -v -R -x \"*/$1\"), return code was: $ret"
    exit $ret
  ;;

  reverse)
    shift
    msg "Reverse dependencies for $@ (xbps-query -v -R $@):"
    xbps-query -v -R -X "$@"
    ret=$?; msg "Execution finished (xbps-query -v -R $@), return code was: $ret"
    exit $ret
  ;;

  searchfile)
    shift
    msg "searchfile: This might take a long time, please be patient..."
    msg "(xbps-query -v -R -o \"*/$1\"):"
    sleep 1
    xbps-query -v -R -o "*/$1"
    ret=$?; msg "Execution finished (xbps-query -v -R -o \"*/$1\"), return code was: $ret"
    exit $ret
  ;;

  list)
    shift
    msg "Installed packages: "
    count=0
    xbps-query -v -l | while read line; do
    let count=count+1
    pkgname="$(echo "$line" | cut -d" " -f 2 | xargs -0)"
    version="$(extract_versionstring "$pkgname")"
    pkg="$(extract_packagename "$pkgname")"
    tput setaf 32
    echo -e -n "($count) ${pkg} "
    tput setaf 244
    echo -e -n " [${version}] "
    tput setaf 241
    echo " [${pkgname}] "
    shift
    done
  ;;

  listalternative|listalternatives)
  xbps-alternatives -l "$@"
  ;;

  setalternative|setalternatives)
  shift
  xbps-alternatives -s "$@"
  ;;

  repolist|listrepos)
    msg "Configured repositories (xbps-query -v -L): "
    xbps-query -v -L
    shift
    echo
    msg "Available sub-repositories (xbps-query -v -Rs void-repo): "
    xbps-query -v -Rs void-repo
    msg "[xbps-query -v -Rs void-repo] return code: $?"
    shift
    echo
    msg "Use \"vpm addrepo <repository>\" to add a sub-repository."
    echo
  ;;

  addrepo)
    shift
    while [ "$#" -gt 0 ]; do
    msg "Adding repository: $1"
    xbps-install "$1"
    msg "[xbps-install $arg] return code: $?"
    msg "Synchronizing remote repository data (xbps-install -S): "
    xbps-install -S
    msg "[xbps-install -S] return code: $?"
    shift
    done
    ;;
  sync)
    msg "Synchronizing remote repository data: (xbps-install -S):"
    xbps-install -S
    msg "[xbps-install -S] return code: $?"
  ;;

  install)
  shift
  if [ "$#" -lt 1 ]; then
    msg "ERROR: install: argument missing"
    usage
    exit 1
  fi
  args=($@)
  count=0
  msg "Packages will be installed one-by-one"
  msg "Use \"forceinstall\" to override this if you know what you're doing."
  for arg in "${args[@]}"; do
  let count=count+1
  msg "Installing packages: ($count/${#args[@]}): $arg (xbps-install -S $arg) ..."
  xbps-install -S "$arg"
  ret="$?"
  msg "[xbps-install -S $arg] return code: $ret"
  done
  ;;

  forceinstall)
  shift
  msg "Force-Installing Package(s): $@ (xbps-install -Sf $@)"
  xbps-install -Sf "$@"
  ;;

  remove)
  shift
  msg "Removing package(s): $@ (xbps-remove -v $@)"
  xbps-remove -v "$@"
  ;;

  removerecursive)
  shift
  msg "Removing package(s) recursively: $@ (xbps-remove -v -R $@)"
  xbps-remove -v -R "$@"
  ;;

  autoremove)
  shift
  msg "autoremove: Removing orphaned packages (xbps-remove -v -Q)"
  xbps-remove -v -O
  msg "done."
  ;;

  update)
  shift
  msg "Running system update (xbps-install -Sduv)"
  xbps-install -Suv
  msg "[xbps-install -Suv] return code: $?"
  ;;

  search)
  shift
  msg "Searching for: $@ (xbps-query -v -Rs $@)"
  xbps-query -v -Rs "$@"
  msg "[xbps-query -v -Rs $@] return code: $?"
  ;;

  cleanup)
  msg "Cleaning up packages (will remove orphaned packages) (xbps-remove -v -O $@)"
  shift
  xbps-remove -v -O "$@"
  msg "[xbps-remove -v --D $@] return code: $?"
  ;;

  help|-h|--help)
  usage
  ;;

  ''|*)
  a="$1"
  if hash "xbps-${a}" >/dev/null 2>&1; then
    shift
    # xbps-<subcommand> found
    msg "relaying to XBPS: xbps-${a} $@"
    xbps-${a} $@
  else
    msg "Unrecognized vpm subcommand: $1 (and xbps-$1 does not exist) - Try: ${0##*/} help"
    echo
    exit 1
  fi
  ;;

esac

exit 0







xbps-query
==========

--cachedir           -c  -- Full path to cachedir                                                                                                                                                                               
--cat                    -- Print file from binpkg to stdout                                                                                                                                                                    
--config             -C  -- Full path to configuration file                                                                                                                                                                     
--debug              -d  -- Debug mode shown to stderr                                                                                                                                                                          
--deps               -x  -- Show dependencies                                                                                                                                                                                   
--files              -f  -- Show package files                                                                                                                                                                                  
--fulldeptree            -- Full dependency tree for -x/--deps                                                                                                                                                                  
--help               -h  -- Print help usage                                                                                                                                                                                    
--ignore-conf-repos  -i  -- Ignore repositories defined in xbps.d                                                                                                                                                               
--list-hold-pkgs     -H  -- List packages on hold state                                                                                                                                                                         
--list-manual-pkgs   -m  -- List packages installed explicitly                                                                                                                                                                  
--list-orphans       -O  -- List package orphans                                                                                                                                                                                
--list-pkgs          -l  -- List installed packages                                                                                                                                                                             
--list-repos         -L  -- List registered repositories                                                                                                                                                                        
--memory-sync        -M  -- Keep remote repository data in memory only                                                                                                                                                          
--ownedby            -o  -- Search for package files                                                                                                                                                                            
--property           -p  -- Show properties                                                                                                                                                                                     
--regex                  -- Use Extended Regular Expressions to match                                                                                                                                                           
--repository         -R  -- Enable repository mode                                                                                                                                                                              
--repository             -- Add repository to the top of the list                                                                                                                                                               
--revdeps            -X  -- Show reverse dependencies                                                                                                                                                                           
--rootdir            -r  -- Full path to rootdir                                                                                                                                                                                
--search             -s  -- Search for packages                                                                                                                                                                                 
--show               -S  -- Show information                                                                                                                                                                                    
--verbose            -v  -- Verbose messages                                                                                                                                                                                    
--version            -V  -- Show XBPS version                                                                                                                                                                                   


xbps-install
============

Usage: xbps-install [OPTIONS] [PKGNAME...]

OPTIONS
 -A --automatic           Set automatic installation mode
 -C --config <dir>        Path to confdir (xbps.d)
 -c --cachedir <dir>      Path to cachedir
 -d --debug               Debug mode shown to stderr
 -f --force               Force package re-installation
                          If specified twice, all files will be
                          overwritten.
 -h --help                Print help usage
 -i --ignore-conf-repos   Ignore repositories defined in xbps.d
 -U --unpack-only         Unpack packages in transaction, do not configure them
 -M --memory-sync         Remote repository data is fetched and stored
                          in memory, ignoring on-disk repodata archives.
 -n --dry-run             Dry-run mode
 -R,--repository=<url>    Add repository to the top of the list.
                          This option can be specified multiple times.
 -r --rootdir <dir>       Full path to rootdir
 -S --sync                Sync remote repository index
 -u --update              Update target package(s)
 -v --verbose             Verbose messages
 -y --yes                 Assume yes to all questions
 -V --version             Show XBPS version



=== xbps-alternatives
Usage: xbps-alternatives [OPTIONS] MODE

OPTIONS
 -C --config <dir>   Path to confdir (xbps.d)
 -d --debug          Debug mode shown to stderr
 -g --group <name>   Group of alternatives to match
 -h --help           Print usage help
 -r --rootdir <dir>  Full path to rootdir
 -v --verbose        Verbose messages
 -V --version        Show XBPS version
MODE
 -l --list [PKG]     List all alternatives or from PKG
 -s --set PKG        Set alternatives for PKG




=== xbps-create
Usage: xbps-create [OPTIONS] -A <arch> -n <pkgver> -s "<desc>" destdir

OPTIONS
 -A --architecture   Package architecture (e.g: noarch, i686, etc).
 -B --built-with     Package builder string (e.g: xbps-src-30).
 -C --conflicts      Conflicts (blank separated list,
                     e.g: 'foo>=2.0 blah<=2.0').
 -D --dependencies   Dependencies (blank separated list,
                     e.g: 'foo>=1.0_1 blah<2.1').
 -F --config-files   Configuration files (blank separated list,
                     e.g '/etc/foo.conf /etc/foo-blah.conf').
 -H --homepage       Homepage.
 -h --help           Show help.
 -l --license        License.
 -M --mutable-files  Mutable files list (blank separated list,
                     e.g: '/usr/lib/foo /usr/bin/blah').
 -m --maintainer     Maintainer.
 -n --pkgver         Package name/version tuple (e.g `foo-1.0_1').
 -P --provides       Provides (blank separated list,
                     e.g: 'foo-9999 blah-1.0').
 -p --preserve       Enable package preserve boolean.
 -q --quiet          Work silently.
 -R --replaces       Replaces (blank separated list,
                     e.g: 'foo>=1.0 blah<2.0').
 -r --reverts        Reverts (blank separated list,
                     e.g: '1.0_1 2.0_3').
 -S --long-desc      Long description (80 cols per line).
 -s --desc           Short description (max 80 characters).
 -t --tags           A list of tags/categories (blank separated list).
 -V --version        Prints XBPS release version.
 --alternatives      List of available alternatives this pkg provides.
                     This expects a blank separated list of <name>:<symlink>:<target>, e.g
                     'vi:/usr/bin/vi:/usr/bin/vim foo:/usr/bin/foo:/usr/bin/blah'.
 --build-options     A string with the used build options.
 --compression       Compression format: none, gzip, bzip2, xz (default).
 --shlib-provides    List of provided shared libraries (blank separated list,
                     e.g 'libfoo.so.1 libblah.so.2').
 --shlib-requires    List of required shared libraries (blank separated list,
                     e.g 'libfoo.so.1 libblah.so.2').

NOTE:
 At least three flags are required: architecture, pkgver and desc.

EXAMPLE:
 $ xbps-create -A noarch -n foo-1.0_1 -s "foo pkg" destdir



=== xbps-pkgdb
Usage: xbps-pkgdb [OPTIONS] [PKGNAME...]

OPTIONS
 -a --all                               Process all packages
 -C --config <dir>                      Path to confdir (xbps.d)
 -d --debug                             Debug mode shown to stderr
 -h --help                              Print usage help
 -m --mode <auto|manual|hold|unhold|repolock|repounlock>
                                        Change PKGNAME to this mode
 -r --rootdir <dir>                     Full path to rootdir
 -u --update                            Update pkgdb to the latest format
 -v --verbose                           Verbose messages
 -V --version                           Show XBPS version



=== xbps-reconfigure
Usage: xbps-reconfigure [OPTIONS] [PKGNAME...]

OPTIONS
 -a --all            Process all packages
 -C --config <dir>   Path to confdir (xbps.d)
 -d --debug          Debug mode shown to stderr
 -f --force          Force reconfiguration
 -h --help           Print usage help
 -i --ignore PKG     Ignore PKG with -a/--all
 -r --rootdir <dir>  Full path to rootdir
 -v --verbose        Verbose messages
 -V --version        Show XBPS version



=== xbps-rindex
Usage: xbps-rindex [OPTIONS] MODE ARGUMENTS

OPTIONS
 -d --debug                        Debug mode shown to stderr
 -f --force                        Force mode to overwrite entry in add mode
 -h --help                         Show help usage
 -v --verbose                      Verbose messages
 -V --version                      Show XBPS version
    --privkey <key>                Path to the private key for signing
    --signedby <string>            Signature details, i.e "name <email>"

MODE
 -a --add <repodir/pkg> ...        Add package(s) to repository index
 -c --clean <repodir>              Clean repository index
 -r --remove-obsoletes <repodir>   Removes obsolete packages from repository
 -s --sign <repodir>               Initialize repository metadata signature
 -S --sign-pkg archive.xbps ...    Sign binary package archive




=== xbps-uhelper
usage: xbps-uhelper [options] [action] [args]

  Available actions:
    binpkgarch, binpkgver, cmpver, digest, fetch, getpkgdepname,
    getpkgname, getpkgrevision, getpkgversion, pkgmatch, version,
    real-version, arch, getsystemdir

  Action arguments:
    binpkgarch	<binpkg>
    binpkgver	<binpkg>
    cmpver		<instver> <reqver>
    digest		<file> <file1+N>
    fetch		<URL[>filename]> <URL1+N[>filename]>
    getpkgdepname	<string>
    getpkgdepversion	<string>
    getpkgname		<string>
    getpkgrevision	<string>
    getpkgversion	<string>
    pkgmatch		<pkg-version> <pkg-pattern>
    version		<pkgname>
    real-version	<pkgname>

  Options shared by all actions:
    -C		Path to xbps.conf file.
    -d		Debugging messages to stderr.
    -r		<rootdir>
    -V		Prints the xbps release version

  Examples:
    $ xbps-uhelper cmpver 'foo-1.0_1' 'foo-2.1_1'
    $ xbps-uhelper digest file ...
    $ xbps-uhelper fetch http://www.foo.org/file.blob ...
    $ xbps-uhelper getpkgdepname 'foo>=0'
    $ xbps-uhelper getpkgdepversion 'foo>=0'
    $ xbps-uhelper getpkgname foo-2.0_1
    $ xbps-uhelper getpkgrevision foo-2.0_1
    $ xbps-uhelper getpkgversion foo-2.0_1
    $ xbps-uhelper pkgmatch foo-1.0_1 'foo>=1.0'
    $ xbps-uhelper version pkgname



=== xbps-remove
Usage: xbps-remove [OPTIONS] [PKGNAME...]

OPTIONS
 -C --config <dir>        Path to confdir (xbps.d)
 -c --cachedir <dir>      Path to cachedir
 -d --debug               Debug mode shown to stderr
 -F --force-revdeps       Force package removal even with revdeps or
                          unresolved shared libraries
 -f --force               Force package files removal
 -h --help                Print help usage
 -n --dry-run             Dry-run mode
 -O --clean-cache         Remove obsolete packages in cachedir
 -o --remove-orphans      Remove package orphans
 -R --recursive           Recursively remove dependencies
 -r --rootdir <dir>       Full path to rootdir
 -v --verbose             Verbose messages
 -y --yes                 Assume yes to all questions
 -V --version             Show XBPS version



